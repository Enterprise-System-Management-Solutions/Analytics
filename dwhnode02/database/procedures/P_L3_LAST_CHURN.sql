--
-- P_L3_LAST_CHURN  (Procedure) 
--
CREATE OR REPLACE PROCEDURE DWH_USER.P_L3_LAST_CHURN IS
BEGIN

    INSERT INTO L3_LAST_CHURN(SUBSCRIPTION_KEY, MSISDN)
    SELECT SUBSCRIPTION_KEY,SERVICE_NUMBER
    FROM SUBSCRIPTION_DIM
    WHERE SERVICE_NUMBER NOT IN ( SELECT MSISDN FROM L3_LAST_CHURN);
    COMMIT;
    --============================PREPAID=================================--
      
    MERGE INTO L3_LAST_CHURN E
    USING SUBSCRIPTION_DIM H
    ON (E.MSISDN = H.SERVICE_NUMBER)
    WHEN MATCHED THEN
    UPDATE SET E.PREPAID = H.SERVICE_TYPE WHERE SERVICE_TYPE='PREPAID';
    COMMIT;
    --============================POSTPAID==================================--
    MERGE INTO L3_LAST_CHURN E
    USING SUBSCRIPTION_DIM H
    ON (E.MSISDN = H.SERVICE_NUMBER)
    WHEN MATCHED THEN
    UPDATE SET E.POSTPAID = H.SERVICE_TYPE WHERE SERVICE_TYPE='POSTPAID';
    COMMIT;
    --============================LAST_VAS_ACTIVE_DATE=====================--
    
    /*CREATE OR REPLACE VIEW LAST_ACTIVITY_DAT_VAS AS
    SELECT KK.R375_CHARGINGPARTYNUMBER, KK.DATE_VALUE
    FROM
    (SELECT V.R375_CHARGINGPARTYNUMBER,V.R377_CYCLEBEGINTIME_KEY,V.R377_CYCLEBEGINTIME_HOUR, Z.DATE_VALUE
    FROM DATE_DIM Z,
    (SELECT A.R375_CHARGINGPARTYNUMBER,A.R377_CYCLEBEGINTIME_KEY,A.R377_CYCLEBEGINTIME_HOUR,
    RANK() OVER (PARTITION BY A.R375_CHARGINGPARTYNUMBER ORDER BY A.R377_CYCLEBEGINTIME_KEY DESC,A.R377_CYCLEBEGINTIME_HOUR DESC) AS LAST_KEY
     FROM
    (SELECT R375_CHARGINGPARTYNUMBER,R377_CYCLEBEGINTIME_KEY,R377_CYCLEBEGINTIME_HOUR
    FROM L3_RECURRING A--, DATE_DIM B
    --WHERE A.R377_CYCLEBEGINTIME_KEY=B.DATE_KEY
    --AND B.DATE_VALUE BETWEEN SYSDATE-40 AND SYSDATE-26 
    GROUP BY R375_CHARGINGPARTYNUMBER,R377_CYCLEBEGINTIME_KEY,R377_CYCLEBEGINTIME_HOUR) A
    )V
    WHERE LAST_KEY=1
    AND V.R377_CYCLEBEGINTIME_KEY=Z.DATE_KEY)KK
    */
    MERGE INTO L3_LAST_CHURN E
        USING LAST_ACTIVITY_DAT_VAS H
        ON (E.MSISDN = H.MSISDN)
        WHEN MATCHED THEN
        UPDATE SET E.LAST_VAS_ACTIVE_DATE = H.DATE_VALUE;
    COMMIT;


--==========================LAST_ACTIVITY_DATE_DATA=============================
/*
CREATE OR REPLACE VIEW LAST_ACTIVITY_DAT_DATA AS
SELECT V. MSISDN , V.DATE_VALUE 
FROM 
(SELECT K.G372_CALLINGPARTYNUMBER  AS MSISDN ,K.G383_CHARGINGTIME_KEY AS CHARGINGTIME_KEY,K.G383_CHARGINGTIME_HOUR AS CHARGINGTIME_HOUR, Z.DATE_VALUE
    FROM DATE_DIM Z,
    (SELECT A.G372_CALLINGPARTYNUMBER,A.G383_CHARGINGTIME_KEY, A.G383_CHARGINGTIME_HOUR, RANK() OVER (PARTITION BY A.G372_CALLINGPARTYNUMBER ORDER BY A.G383_CHARGINGTIME_KEY DESC,A.G383_CHARGINGTIME_HOUR DESC) AS LAST_KEY
       FROM
        (SELECT   V.G372_CALLINGPARTYNUMBER,V.G383_CHARGINGTIME_KEY, v.G383_CHARGINGTIME_HOUR
        FROM L3_DATA V--, DATE_DIM D
        --AND V.G383_CHARGINGTIME_KEY=D.DATE_KEY
        --AND D.DATE_VALUE BETWEEN SYSDATE-27 AND SYSDATE-26   
        GROUP BY G372_CALLINGPARTYNUMBER,G383_CHARGINGTIME_KEY,G383_CHARGINGTIME_HOUR
        )A
    )K 
WHERE LAST_KEY=1
AND K.G383_CHARGINGTIME_KEY=Z.DATE_KEY
)V 

*/
    MERGE INTO L3_LAST_CHURN E
    USING LAST_ACTIVITY_DAT_DATA H
    ON (E.MSISDN = H.MSISDN)
    WHEN MATCHED THEN
    UPDATE SET E.LAST_DATA_ACTIVE_DATE = H.DATE_VALUE;
    COMMIT;


--=======================LAST_REVENUE_GENERATING_DATE==================
    /*
    CREATE OR REPLACE VIEW LAST_ACTIVITY_DAT_DATA AS
    SELECT V. MSISDN , V.DATE_VALUE 
    FROM 
    (SELECT K.G372_CALLINGPARTYNUMBER  AS MSISDN ,K.G383_CHARGINGTIME_KEY AS CHARGINGTIME_KEY,K.G383_CHARGINGTIME_HOUR AS CHARGINGTIME_HOUR, Z.DATE_VALUE
        FROM DATE_DIM Z,
        (SELECT A.G372_CALLINGPARTYNUMBER,A.G383_CHARGINGTIME_KEY, A.G383_CHARGINGTIME_HOUR, RANK() OVER (PARTITION BY A.G372_CALLINGPARTYNUMBER ORDER BY A.G383_CHARGINGTIME_KEY DESC,A.G383_CHARGINGTIME_HOUR DESC) AS LAST_KEY
           FROM
            (SELECT   V.G372_CALLINGPARTYNUMBER,V.G383_CHARGINGTIME_KEY, v.G383_CHARGINGTIME_HOUR
            FROM L3_DATA V--, DATE_DIM D
            WHERE V.G41_DEBIT_AMOUNT <0
            --AND V.G383_CHARGINGTIME_KEY=D.DATE_KEY
            --AND D.DATE_VALUE BETWEEN SYSDATE-27 AND SYSDATE-26   
            GROUP BY G372_CALLINGPARTYNUMBER,G383_CHARGINGTIME_KEY,G383_CHARGINGTIME_HOUR
            )A
        )K 
    WHERE LAST_KEY=1
    AND K.G383_CHARGINGTIME_KEY=Z.DATE_KEY
    )V
    */

    MERGE INTO L3_LAST_CHURN E
    USING LAST_REVENUE_GENERATING_DATE H
    ON (E.MSISDN = H.MSISDN)
    WHEN MATCHED THEN
    UPDATE SET E.LAST_REVENUE_GENERATING_DATE = H.DATE_VALUE;
    COMMIT;
        
--==================================
/*
CREATE OR REPLACE FORCE VIEW DWH_USER.LAST_VOICE_ACTIVE_DATE
(
   MSISDN,
   DATE_VALUE
)
   BEQUEATH DEFINER
AS
   SELECT V.MSISDN, V.DATE_VALUE
     FROM (SELECT K.V372_CALLINGPARTYNUMBER AS MSISDN,
                  K.V387_CHARGINGTIME_KEY AS CHARGINGTIME_KEY,
                  K.V387_CHARGINGTIME_HOUR AS CHARGINGTIME_HOUR,
                  Z.DATE_VALUE
             FROM DATE_DIM Z,
                  (SELECT A.V372_CALLINGPARTYNUMBER,
                          A.V387_CHARGINGTIME_KEY,
                          A.V387_CHARGINGTIME_HOUR,
                          RANK ()
                          OVER (
                             PARTITION BY A.V372_CALLINGPARTYNUMBER
                             ORDER BY
                                A.V387_CHARGINGTIME_KEY DESC,
                                A.V387_CHARGINGTIME_HOUR DESC)
                             AS LAST_KEY
                     FROM (  SELECT V.V372_CALLINGPARTYNUMBER,
                                    V.V387_CHARGINGTIME_KEY,
                                    V387_CHARGINGTIME_HOUR
                               FROM L3_VOICE V                  --, DATE_DIM D
                              WHERE V378_SERVICEFLOW = 1
                           --AND V.V387_CHARGINGTIME_KEY=D.DATE_KEY
                           --AND D.DATE_VALUE BETWEEN SYSDATE-27 AND SYSDATE-26
                           GROUP BY V372_CALLINGPARTYNUMBER,
                                    V387_CHARGINGTIME_KEY,
                                    V387_CHARGINGTIME_HOUR) A) K
            WHERE LAST_KEY = 1 AND K.V387_CHARGINGTIME_KEY = Z.DATE_KEY) V;
*/


    MERGE INTO L3_LAST_CHURN E
    USING LAST_VOICE_ACTIVE_DATE H
    ON (E.MSISDN = H.MSISDN)
    WHEN MATCHED THEN
    UPDATE SET E.LAST_VOICE_ACTIVE_DATE = H.DATE_VALUE;
    COMMIT;

--===============================LAST_ACTIVITY_DATE====================--
     MERGE INTO L3_LAST_CHURN A
        USING (SELECT X.MSISDN AS MSISDN, X.DATE_KEY AS DATE_KEY, X.TIME_KEY AS TIME_KEY,X.DATE_VALUE
        FROM
    (SELECT Z.MSISDN, Z.DATE_KEY,Z.TIME_KEY, XX.DATE_VALUE,RANK() OVER (PARTITION BY Z.MSISDN ORDER BY Z.DATE_KEY DESC,Z.TIME_KEY DESC) LAST_KEY
    FROM DATE_DIM XX,
    (SELECT A.MSISDN, A.DATE_KEY,A.TIME_KEY
    FROM
    (SELECT MSISDN,
    NVL(LU_MOC_DATE_KEY,0) AS DATE_KEY ,
    NVL(LU_MOC_TIME_KEY,0) AS TIME_KEY
    FROM 
    LAST_ACTIVITY_FCT_LD
    UNION ALL
    SELECT MSISDN,
    NVL(LU_ON_NET_MOC_DATE_KEY,0) AS DATE_KEY ,
    NVL(LU_ON_NET_MOC_TIME_KEY,0) AS TIME_KEY
    FROM 
    LAST_ACTIVITY_FCT_LD
    UNION ALL
    SELECT MSISDN,
    NVL(LU_OFF_NET_MOC_DATE_KEY,0) AS DATE_KEY ,
    NVL(LU_OFF_NET_MOC_TIME_KEY,0) AS TIME_KEY
    FROM 
    LAST_ACTIVITY_FCT_LD
    UNION ALL
    SELECT MSISDN,
    NVL(LU_MOSMS_DATE_KEY,0) AS DATE_KEY ,
    NVL(LU_MOSMS_TIME_KEY,0) AS TIME_KEY
    FROM 
    LAST_ACTIVITY_FCT_LD
    UNION ALL
    SELECT MSISDN,
    NVL(LU_GPRS_DATE_KEY,0) AS DATE_KEY ,
    NVL(LU_GPRS_TIME_KEY,0) AS TIME_KEY
    FROM 
    LAST_ACTIVITY_FCT_LD
    UNION ALL
    SELECT MSISDN,
    NVL(LR_DATE_KEY,0) AS DATE_KEY ,
    NVL(LR_TIME_KEY,0) AS TIME_KEY
    FROM 
    LAST_ACTIVITY_FCT_LD)A
    GROUP BY A.MSISDN, A.DATE_KEY,A.TIME_KEY
    ORDER BY A.MSISDN DESC, A.DATE_KEY DESC, A.TIME_KEY DESC)Z
    WHERE Z.DATE_KEY = XX.DATE_KEY
    )X
    WHERE X.LAST_KEY=1)T
    ON (A.MSISDN = T.MSISDN) 
    WHEN MATCHED THEN
    UPDATE SET A.LAST_ACTIVITY_DATE = T.DATE_VALUE;
    COMMIT;

--===============================nod done============

/*
    MERGE INTO L3_LAST_CHURN E
    USING FIRST_DATE_IN_NETWORK H
    ON (E.MSISDN = H.MSISDIN)
    WHEN MATCHED THEN
    UPDATE SET E.FIRST_DATE_IN_NETWORK = H.DATE_VALUE;
    COMMIT;
    */
--===========================

/*
CREATE OR REPLACE FORCE VIEW DWH_USER.LAST_SMS_DATE
(
   MSISDN,
   DATE_VALUE
)
   BEQUEATH DEFINER
AS
   SELECT V.MSISDN, V.DATE_VALUE
     FROM (SELECT K.S372_CALLINGPARTYNUMBER AS MSISDN,
                  K.S387_CHARGINGTIME_KEY AS CHARGINGTIME_KEY,
                  K.S387_CHARGINGTIME_HOUR AS CHARGINGTIME_HOUR,
                  Z.DATE_VALUE
             FROM DATE_DIM Z,
                  (SELECT A.S372_CALLINGPARTYNUMBER,
                          A.S387_CHARGINGTIME_KEY,
                          A.S387_CHARGINGTIME_HOUR,
                          RANK ()
                          OVER (
                             PARTITION BY A.S372_CALLINGPARTYNUMBER
                             ORDER BY
                                A.S387_CHARGINGTIME_KEY DESC,
                                A.S387_CHARGINGTIME_HOUR DESC)
                             AS LAST_KEY
                     FROM (  SELECT V.S372_CALLINGPARTYNUMBER,
                                    V.S387_CHARGINGTIME_KEY,
                                    S387_CHARGINGTIME_HOUR
                               FROM L3_SMS V                    --, DATE_DIM D
                              WHERE S378_SERVICEFLOW = 1
                           --AND V.S387_CHARGINGTIME_KEY=D.DATE_KEY
                           --AND D.DATE_VALUE BETWEEN SYSDATE-27 AND SYSDATE-26
                           GROUP BY S372_CALLINGPARTYNUMBER,
                                    S387_CHARGINGTIME_KEY,
                                    S387_CHARGINGTIME_HOUR) A) K
            WHERE LAST_KEY = 1 AND K.S387_CHARGINGTIME_KEY = Z.DATE_KEY) V;
*/

    MERGE INTO L3_LAST_CHURN E
    USING LAST_SMS_DATE H
    ON (E.MSISDN = H.MSISDN)
    WHEN MATCHED THEN
    UPDATE SET E.LAST_SMS_DATE = H.DATE_VALUE;
    COMMIT;
    
END;
/

